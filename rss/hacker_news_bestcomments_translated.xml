<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>黑客新闻：最佳评论</title><link/>https://news.ycombinator.com/bestcomments<description>黑客新闻 RSS</description><docs> https://hnrss.org/</docs><generator>人力资源服务系统 v2.1</generator><lastbuilddate> 2023 年 8 月 30 日星期三 12:06:19 +0000 </lastbuilddate><atom:link href="https://hnrss.org/bestcomments" rel="self" type="application/rss+xml"></atom:link><item><title><![CDATA[New comment by botanical in "Discovery of spherules of likely extrasolar composition in the Pacific Ocean [pdf]"]]></title><description><![CDATA[
<p>第一作者是 Avi Loeb，他认为：<p> >; 2018年，他以“Oumuamua”为例提出，太阳系中可能存在外星飞船。 2023 年，他声称从一颗星际流星中回收了物质，这可能是外星飞船存在的证据，一些专家批评他的说法仓促且耸人听闻。<p> >; 2023 年 8 月 24 日，《纽约时报》发表了一篇关于勒布和他寻找外星生命迹象的文章，以及他如何成为“世界领先的外星猎人”。<p>所以用一粒盐来接受索赔</p>]]>;</description><pubDate> Wed, 30 Aug 2023 03:32:01 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37317348<dc:creator>植物</dc:creator><comments>https://news.ycombinator.com/item?id=37317348</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37317348 </guid></item><item><title><![CDATA[New comment by IncogNET in "ISPs Should Not Police Online Speech – No Matter How Awful It Is"]]></title><description><![CDATA[
<p>很高兴看到这个。在这整个磨难中，飓风电力的表现非常不专业。它从这里开始： <a href="https://twitter.com/IncogNetLLC/status/1685359845505957888" rel="nofollow noreferrer">https://twitter.com/IncogNetLLC/status/1685359845505957888</a><p>我们就他们的行为向华盛顿州总检察长提出投诉。他的回答或多或少是技术上迟钝的垃圾，而且“你不是我们的直接客户”（当然是释义）。<p>因此，他们所做的就是阻止访问我们的客户在我们下游宣布的整个 IPv6 /36 子网。我们或 HE 的上游从未收到过滥用报告。我们也没有收到那些对该网站存在感到不安的人直接发送给我们的任何可信的滥用报告。与此同时，这实际上对相关网站的存在没有直接影响，因为他们的反对者现在已经了解到，该网站从未真正离线过。只是暂时阻止某些 ISP 的访问。<p>从 ISP 的角度来看，令人担忧的是，像 HE 这样的交通提供商可以通过合法、受保护的言论任意取消您的客户或客户的客户（等等）。那么，从商业角度来看，HE 必须获得什么？抱怨该网站的人并不是他们的目标市场，他们大多是 Twitch 主播、Twitter 名人以及在现有流行平台上拥有粉丝的人。他们不是那种需要机架空间和传输的自托管流媒体服务的类型。那么，向他们屈膝能得到什么好处呢？最安全的商业决策是保持中立，在收到执法要求时做出回应，否则就做你受薪的工作。最糟糕的商业决策是调整下游客户的内容，这就是我们现在所看到的。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 22:51:05 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37315195<dc:creator>英科网络</dc:creator><comments>https://news.ycombinator.com/item?id=37315195</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37315195 </guid></item><item><title><![CDATA[New comment by CM30 in "ISPs Should Not Police Online Speech – No Matter How Awful It Is"]]></title><description><![CDATA[
<p>我同意，目前我们有太多的实体应该只是“愚蠢的管道”，试图扮演道德警察，而当涉及到互联网上的言论自由时，这是一个非常令人担忧的情况。 Cloudflare 是一个经常被提及的例子，Visa 和 Mastercard 等支付处理商以及 iOS 和 Play 商店等应用商店也是如此，但 ISP 试图阻止实际上并不违法的网站的流量，感觉比这更进一步。<p>感觉就像私人公司实际上正在制定关于现在网络和社会允许的行为的法律，并且它几乎成为随意审查言论自由的漏洞。<p>虽然这里讨论的网站基本上在各个方面都在道德上破产了，但假设同样的事情可能（并且可能会）发生在更多人同意的网站上似乎并不太牵强，因为 ISP 的某人/某个团体不喜欢它们或认为它们应该易于访问。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 22:07:45 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37314778<dc:creator> CM30</dc:creator><comments> https://news.ycombinator.com/item?id=37314778</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37314778 </guid></item><item><title><![CDATA[New comment by rout39574 in "Ask HN: Why did Python win?"]]></title><description><![CDATA[
<p>所以我想你有这样的观点，因为你刚开始工作还不到 20 年。在某些方面，Pythonic 方式做事的理念是与 Perl 大力倡导的不止一种方式相对立的。<p> Python 已经真正获胜一段时间了，所以它的思想纪律自然变得破烂不堪。这群把选择看得比一致性更重要的孩子并没有 Perl 时代的伤痕来体现他们的偏见。<p>但与以前的文化相比，作为一个社区，Python 戏剧性地更专注于寻找一种 Python 风格的方式来进行，然后倡导它。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 21:36:15 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37314468<dc:creator>路由39574</dc:creator><comments> https://news.ycombinator.com/item?id=37314468</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37314468 </guid></item><item><title><![CDATA[New comment by mortenjorck in "ISPs Should Not Police Online Speech – No Matter How Awful It Is"]]></title><description><![CDATA[
<p>令人振奋的是，在其他具有同等地位的组织尚未做到这一点的时候，电子前沿基金会却坚持了这一原则。<p>我不想这么说，但我很容易想象美国公民自由联盟（ACLU）在这方面反对电子自由基金会（EFF）。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 21:19:29 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37314275<dc:creator>莫滕约克</dc:creator><comments>https://news.ycombinator.com/item?id=37314275</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37314275 </guid></item><item><title><![CDATA[New comment by Loeffelmann in "Ask HN: Why did Python win?"]]></title><description><![CDATA[
<p>>; 应该有一种——最好只有一种——明显的方法来做到这一点。<p>但这在Python中是非常可笑的错误</p>]]>;</description><pubDate> Tue, 29 Aug 2023 20:43:26 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37313755<dc:creator>勒弗尔曼</dc:creator><comments>https://news.ycombinator.com/item?id=37313755</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37313755 </guid></item><item><title><![CDATA[New comment by dmazzoni in "Ask HN: Why did Python win?"]]></title><description><![CDATA[
<p>我认为 Python 首先是作为一种通用语言而流行的。毕竟，人们投入如此多的精力来编写 Numpy 是有原因的。<p>我认为很多人都被Python之禅（ <a href="https://peps.python.org/pep-0020/" rel="nofollow noreferrer">https://peps.python.org/pep-0020/</a> ）中所体现的语言设计所吸引，例如：<p>显式的比隐式的好。<p>可读性很重要。<p>错误永远不应该静默地传递（除非明确地静默）<p>应该有一种——最好只有一种——明显的方法来做到这一点。<p>在许多情况下，Ruby 的理念几乎相反。这没有什么问题——但我认为很多人更喜欢 Python 的选择。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 20:33:59 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37313605<dc:creator>德马佐尼</dc:creator><comments>https://news.ycombinator.com/item?id=37313605</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37313605 </guid></item><item><title><![CDATA[New comment by AdamH12113 in "Ask HN: Why did Python win?"]]></title><description><![CDATA[
<p>我（有点模糊）记得，Python 主要是作为脚本语言与 Perl 竞争，而不是作为应用程序/Web 语言与 Ruby 竞争。几年后，当 Ruby on Rails 推动了 Web 2.0 运动时，我开始听说 Ruby，但对我来说那感觉像是一个不同的时代。 Eric S. Raymond 在 2000 年写了一篇文章[1]，讲述了他在花了很多时间使用 Perl 后尝试 Python 的经历。我在这里引用其中的一些内容：<p> >; 当您编写工作代码的速度几乎与您输入的速度一样快并且您的失误率接近于零时，这通常意味着您已经掌握了该语言。但这没有意义，因为这仍然是第一天，我经常停下来查找新的语言和库功能！<p> >; 这是我的第一个线索，在 Python 中，我实际上正在处理一个非常好的设计。大多数语言的设计中都有太多的摩擦和尴尬，以至于你在失误率下降到接近于零之前很久就已经学会了它们的大部分功能集。 Python 是我使用过的第一种通用语言，它扭转了这个过程。<p> [1] <a href="https://www.linuxjournal.com/article/3882" rel="nofollow noreferrer">https://www.linuxjournal.com/article/3882</a></p> ]]>;</description><pubDate> Tue, 29 Aug 2023 20:25:57 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37313469<dc:creator>亚当H12113</dc:creator><comments> https://news.ycombinator.com/item?id=37313469</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37313469 </guid></item><item><title><![CDATA[New comment by moonchrome in "Ask HN: Why did Python win?"]]></title><description><![CDATA[
<p>Ruby 的受欢迎程度从未与 Python 类似。这只是 Webdev 圈子里的一种时尚。在 RoR 之前我很少见过 ruby​​，而 python 却到处都是。<p> Python 作为一种流行的教学语言，它是如何在学术界站稳脚跟的。<p>我记得 20 年前，当我刚开始接触游戏脚本时，它很流行（Lua 更易于嵌入，但也使用了 python）。大量与本机代码的一流接口方法（还记得 c++ boost 传送 python 绑定生成器）。<p>许多工具将 python 作为嵌入式脚本语言提供。<p> Python 用于创建构建系统。<p>更不用说任何发行版都有 python，它在这方面取代了 perl。电池的配备和可用帮助它成为随机脚本的标准。<p> Python 在 numpy/ML 之前就已经很强大了。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 20:21:52 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37313413<dc:creator>月色</dc:creator><comments>https://news.ycombinator.com/item?id=37313413</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37313413</guid></item><item><title><![CDATA[New comment by zdw in "Ask HN: Why did Python win?"]]></title><description><![CDATA[
<p>有一个笑话大意是“Python 不是任何特定任务的最佳语言，但几乎总是该任务的第二佳语言”——它是万能语言。<p>正因为如此，很多人学习了Python，然后将其应用到许多不同的领域，它变得更加流行和有用。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 20:21:27 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37313403<dc:creator>兹德文</dc:creator><comments>https://news.ycombinator.com/item?id=37313403</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37313403 </guid></item><item><title><![CDATA[New comment by r_thambapillai in "Ask HN: Why did Python win?"]]></title><description><![CDATA[
<p>多亏了 Numpy / Pandas，Python 最终“专门”于数据环境，因此，它最终成为比任何从事数据工作的人第一次接触编程的人。那是数百万人。在那个领域，它没有竞争对手。<p>由于 Rails，Ruby 最终“专注于”网络开发。但当 Node 和 React 出现时，Ruby on Rails 不得不与 Nodejs + React / MERN 竞争作为构建 Web 应用程序的方式。由于人们第一次学习编程来构建 Web 应用程序通常会从 javascript 开始（因为许多第一个项目甚至可能不需要后端），因此 Nodejs/React 路线成为默认路径要容易得多。而如果你是一名数据科学家，你会从 Python 开始，随着你的进步，你基本上会继续使用 Python。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 20:11:31 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37313251<dc:creator> r_thambapillai</dc:creator><comments> https://news.ycombinator.com/item?id=37313251</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37313251 </guid></item><item><title><![CDATA[New comment by firesteelrain in "FBI, Partners Dismantle Qakbot Infrastructure in Multinational Cyber Takedown"]]></title><description><![CDATA[
<p>“为了破坏僵尸网络，FBI 将 Qakbot 流量重定向到该局控制的服务器，指示受感染的计算机下载卸载程序文件。此卸载程序旨在删除 Qakbot 恶意软件，使受感染的计算机脱离僵尸网络，并阻止安装任何其他恶意软件.”<p>他们治愈了数十万台计算机，真是太好了</p>]]>;</description><pubDate> Tue, 29 Aug 2023 17:30:47 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37311141<dc:creator>火钢雨</dc:creator><comments>https://news.ycombinator.com/item?id=37311141</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37311141 </guid></item><item><title><![CDATA[New comment by colmmacc in "Keystroke timing obfuscation added to ssh(1)"]]></title><description><![CDATA[
<p>自 20 世纪 80 年代以来，击键计时一直是终端 I/O 关注的一个问题，人们使用 stelnet 和 kerberos 进行原始加密。<p>大多数终端应用程序使用缓冲 I/O 进行密码输入，这仍然是一项重要的安全功能。在该模式下，在用户按回车键之前，不会向另一端发送任何内容。无论如何，MiTM 只能“看到”一个数据包，并且通过填充，他们甚至无法推断出密码长度。<p>有一段时间，以非缓冲模式接受密码的应用程序有很多选择。他们中的许多人这样做是为了在用户键入时能够逐个字符地回显“*”符号。这个简单的功能看起来很酷，并且确实为用户提供了反馈......但会泄漏击键率，这是您在密码输入时最不希望看到的事情。<p>我希望我们保留用于密码输入的缓冲 I/O，因为它仍然比 ssh 通过一些混淆所做的更好。但很高兴看到 ssh 添加此功能，并将有助于保护无法缓冲的内容，例如 shell 和编辑器输入。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 15:13:46 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37309122<dc:creator>科尔马克</dc:creator><comments>https://news.ycombinator.com/item?id=37309122</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37309122 </guid></item><item><title><![CDATA[New comment by lvncelot in "I don’t buy “duplication is cheaper than the wrong abstraction” (2021)"]]></title><description><![CDATA[
<p>>; 除了极少数情况外，重复实际上总是值得修复的。<p>我不同意这种情况的严重性，并认为存在无法通过抽象“修复”的重复。<p>我遇到过很多这样的情况：两段代码<i>在某个时间点</i>看起来很相似。随着代码库的发展，这两段代码、它们的用法和依赖关系也在不断发展，直到相似性几乎消失。早期的抽象将那些巧合相似的代码片段分组，然后必须扩展以涵盖这两种演变。<p>在这种情况下，“错误的抽象”并不是在有更好的抽象的情况下不合适的抽象，而是在根本<i>没有</i>合适的概括的情况下的任何（甚至是最好的）抽象。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 13:00:12 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37307146<dc:creator>文斯洛特</dc:creator><comments>https://news.ycombinator.com/item?id=37307146</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37307146 </guid></item><item><title><![CDATA[New comment by sanitycheck in "Elixir Saves Pinterest $2M a Year in Server Costs"]]></title><description><![CDATA[
<p>我想知道他们的流量中有多少是因为错误而到达那里的愤怒的人。如果他们只是将 robots.txt 设置为禁止一切，他们可以节省超过 200 万美元。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 08:54:00 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37304997<dc:creator>完整性检查</dc:creator><comments>https://news.ycombinator.com/item?id=37304997</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37304997 </guid></item><item><title><![CDATA[New comment by coldtea in "Elixir Saves Pinterest $2M a Year in Server Costs"]]></title><description><![CDATA[
<p>仅从标题来看，这没什么意义。否则要花多少钱？节省百分比是多少？<p>但在 TFA 中，情况会变得更好：“史蒂夫：这非常简单。当我开始加入垃圾邮件团队时，我们有近 1,400 台服务器正在运行。当我们将几个部件转换为 Elixir 时，我们将其减少了大约 95%。其中之一运行在 200 台 Python 服务器上的系统现在运行在四台 Elixir 服务器上（它实际上可以在两台服务器上运行，但我们认为四台服务器提供了更多的容错能力）。更好的架构和 Elixir 的综合效果每年为 Pinterest 节省了超过 200 万美元的服务器费用成本。此外，尽管运行在大大减少的硬件上，系统的性能和可靠性却得到了提高。当我们的通知系统在 Java 上运行时，它在 30 个 c32.xl 实例上。当我们切换到 Elixir 时，我们可以在15. 尽管在较少的硬件上运行，但响应时间和错误都显着下降。”</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 08:44:33 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37304916<dc:creator>冷茶</dc:creator><comments>https://news.ycombinator.com/item?id=37304916</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37304916 </guid></item><item><title><![CDATA[New comment by the_af in "Can a worker-owned restaurant work?"]]></title><description><![CDATA[
<p>我住的拐角处的披萨店（美味披萨，不是垃圾披萨）是工人开的。前任业主破产了，让他的员工闲置，所以他们接管了这个地方。不确定法律情况（例如，他们是否从业主手中购买了这家餐厅或什么），但过去几年来，这家餐厅一直由工人拥有，而且从餐厅总是客满程度来看，做得很好。我在那里吃和外带，质量非常好。<p>这不是我所知道的第一家体面工人开办的餐厅，所以我会回答：是的，它可以工作。</p> ]]>;</description><pubDate> Tue, 29 Aug 2023 00:59:43 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37302273<dc:creator> the_af</dc:creator><comments> https://news.ycombinator.com/item?id=37302273</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37302273 </guid></item><item><title><![CDATA[New comment by ajhai in "ChatGPT Enterprise"]]></title><description><![CDATA[
<p>明确指出他们不会对企业数据进行培训，并且 SOC2 合规性将使许多企业放心并在其业务流程中采用 ChatGPT。<p>从我们与企业的讨论（试图出售我们的法学硕士应用程序平台）中，我们很快了解到企业在共享数据方面是多么敏感。在许多此类组织中，员工已经将大量敏感数据粘贴到 ChatGPT 中，除非对 ChatGPT 本身的访问受到限制。我们知道有一些公司最终使用 Azure 的 OpenAI 产品部署了 chatbot-ui，因为 Azure 声称不使用用户数据 ( <a href="https://learn.microsoft.com/en-us/legal/cognitive-services/openai/data-privacy" rel="nofollow noreferrer">https://learn.microsoft.com/en-us/legal/cognitive-services/o...</a> ) 。<p>我们最终在我们的平台上添加了对 Azure OpenAI 产品的支持，并开源了我们的引擎以支持本地部署（LLMStack - <a href="https://github.com/trypromptly/LLMStack">https://github.com/trypromptly/LLMStack</a> ），以解决这些企业的隐私问题。</p> ]]>;</description><pubDate> Mon, 28 Aug 2023 21:55:41 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37300908<dc:creator>阿杰海</dc:creator><comments>https://news.ycombinator.com/item?id=37300908</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37300908 </guid></item><item><title><![CDATA[New comment by tptacek in "When your classmates threaten you with felony charges"]]></title><description><![CDATA[
<p>我不是律师，但我对这个奇怪的法律分支非常感兴趣，而且 EFF 的专职律师似乎在这里有点冒险：<p> * Fizz 似乎是一个客户端/服务器应用程序（大概是一个网络应用程序？）<p> * 研究人员所做的测试是在 Fizz 服务器上运行的软件<p>* 识别漏洞后，研究人员使用他们获得的数据库活动创建管理员帐户<p>* 研究人员未获得进行此项测试的许可<p>如果这种事实模式成立，那么除非有我不知道的加州法律管辖这一点——即使如此，联邦至上也有其意义，对吗？ --- 我认为他们确实直接违反了 CFAA，与他们的回应中的主张相反。<p>至少三件事可以减轻他们的法律风险：<p> 1. 从他们的披露和披露后的行为可以清楚地看出，他们是善意地进行安全研究，使他们成为不受欢迎的起诉目标。<p> 2. 目前尚不清楚他们是否造成了任何有意义的损害（这是微妙的：您可以轻松地从未经授权的安全研究中获得 5-6 位数的损害数字，但 Fizz 是如此之小且新，以至于我假设没有人考虑保留取证公司或与保险公司（他们可能不存在）解决问题），这意味着不会有太多可起诉的事情。<p> 3. Fizz 的律师为了让研究人员做出宝贵的让步而搞砸了，并威胁要提起刑事诉讼，正如 EFF 指出的那样，这违反了州律师协会的规定。<p>我认为好人在这里占了上风，但我担心从中吸取太多教训；如果这不是“Fizz”，而是 Dunder Mifflin Infinity 的社交媒体功能，结果可能会更加糟糕。</p> ]]>;</description><pubDate> Mon, 28 Aug 2023 18:35:27 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37298589<dc:creator>特普切克</dc:creator><comments>https://news.ycombinator.com/item?id=37298589</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37298589 </guid></item><item><title><![CDATA[New comment by the_duke in "Fig Has Joined AWS"]]></title><description><![CDATA[
<p>>; 新用户目前无法注册 Fig 的产品，同时我们专注于为现有客户优化产品并解决已确定的将 Fig 与 AWS 集成的一些需求。<p>这听起来很像该产品已经死了，并且可能在某个时候作为 AWS 托管的亚马逊品牌产品再次出现......<p>我永远不会在我的核心工作流程中使用这样的订阅+遥测产品，但我想这对当前用户来说很糟糕。</p> ]]>;</description><pubDate> Mon, 28 Aug 2023 17:56:51 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37297978<dc:creator>公爵</dc:creator><comments>https://news.ycombinator.com/item?id=37297978</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37297978 </guid></item><item><title><![CDATA[New comment by mzg in "Fig Has Joined AWS"]]></title><description><![CDATA[
<p>不，想必这些员工都会立足旱地</p>]]>;</description><pubDate> Mon, 28 Aug 2023 16:42:12 +0000</pubDate><link/> https://news.ycombinator.com/item?id=37296879<dc:creator>米兹格</dc:creator><comments>https://news.ycombinator.com/item?id=37296879</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=37296879</guid></item></channel></rss>