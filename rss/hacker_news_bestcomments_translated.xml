<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>黑客新闻：最佳评论</title><link/>https://news.ycombinator.com/bestcomments<description>黑客新闻 RSS</description><docs> https://hnrss.org/</docs><generator>人力资源服务 v2.1.1</generator><lastbuilddate> 2024 年 10 月 12 日，星期六 02:01:58 +0000 </lastbuilddate><atom:link href="https://hnrss.org/bestcomments" rel="self" type="application/rss+xml"></atom:link><item><title><![CDATA[New comment by robohydrate in "How long til we're all on Ozempic?"]]></title><description><![CDATA[
<p>我已经服用替泽帕肽（Mounjaro）四个月了。我的体重减轻了 13%。我意识到频繁吸食大麻会干扰减肥，所以我把这个习惯从每天吸到周末偶尔吸。我开始定期每周步行 2-3 天、每天步行 2-3 英里，此外还减少饮食并更有动力计算卡路里。<p>综上所述，这种药物改变了我的生活。我花更多的时间做我想做的事情，抑郁和焦虑现在不再那么困扰我了。我觉得这种药物让我成为了长期以来最好的自己。到目前为止，唯一的副作用是积极的。我确实担心一旦到了逐渐减少每周剂量的时候我会做什么，我能想到的最好的办法就是我在服药期间形成的习惯我将决心在停药后继续下去。<p>我这么说是因为我一生都在与抑郁、焦虑和肥胖问题作斗争。我曾多次尝试恢复健康、高效且不肥胖的生活方式，但均以失败告终。我不知道药物对我的帮助有什么不同，但我可以告诉你，它是不同的。</p> ]]>;</description><pubDate> Fri, 11 Oct 2024 19:09:12 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41812493<dc:creator>机器人水合物</dc:creator><comments>https://news.ycombinator.com/item?id=41812493</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41812493 </guid></item><item><title><![CDATA[New comment by freedomben in ""Begin disabling installed extensions still using Manifest V2 in Chrome stable""]]></title><description><![CDATA[
<p>同意希望这是一个拐点，但只是部分同意它与广告拦截有关。当然，谷歌希望 adblock 消失，但我认为它的意义比这更深远。<p>我认为这是整个技术领域乃至谷歌的一个更大趋势的一部分：消除用户控制。当你观察他们正在做的“安全”事情时，他们中的许多人都有一个共同的理念来支持他们，即用户（也称为<i>设备所有者</i>）是安全威胁，必须受到保护。 Web 完整性、Manifest v3、各种 DoH/DoT、引导加载程序锁定、设备完整性（可方便地使 root 变得困难/不可能）等等。<p>对于所有从事这些工作的工程师，我希望你们感到高兴，因为你们的工作实质上正在摧毁我们成长的世界。下一代将不会拥有我们所享受的美妙而丰富的计算环境，而且（部分）你的错。</p> ]]>;</description><pubDate> Fri, 11 Oct 2024 15:04:25 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41810118<dc:creator>自由本</dc:creator><comments>https://news.ycombinator.com/item?id=41810118</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41810118 </guid></item><item><title><![CDATA[New comment by DennisL123 in "Tesla Robotaxi"]]></title><description><![CDATA[
<p>经典的诱饵和开关设置。向人们推销两年后的未来，但今天却几乎没有什么可展示的。时间表会推迟，计划会改变，软件不会准备好，价格会改变。这甚至没有考虑到 Waymo 两年后的状况，也没有考虑到中国电动汽车行业到那时能够取得的成就。<p>即使是这个平淡无奇的活动最初也是在四月份销售情况不佳时临时宣布的，以支撑人们的看法[1]，推迟了两个月左右，然后甚至没有按时开始。哦，当时实施机器人出租车是一个为期两个月的项目[1]。伙计们，这是一个诡计。<p> [1] <a href="https://fortune.com/2024/07/16/elon-musk-tesla-robotaxi-delay-august-reveal-design/" rel="nofollow">https://fortune.com/2024/07/16/elon-musk-tesla-robotaxi-dela...</a></p> ]]>;</description><pubDate> Fri, 11 Oct 2024 05:59:35 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41806626<dc:creator>丹尼斯L123</dc:creator><comments> https://news.ycombinator.com/item?id=41806626</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41806626 </guid></item><item><title><![CDATA[New comment by Animats in "Tesla Robotaxi"]]></title><description><![CDATA[
<p>有趣的是，这是在伯班克的华纳后场。不是派拉蒙或环球影业，它们都在好莱坞。如果在派拉蒙或环球影城这样做会很尴尬，因为这些都在 Waymo 的服务范围内。人们将乘坐真正的自动驾驶出租车到达活动现场。</p> ]]>;</description><pubDate> Fri, 11 Oct 2024 05:19:11 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41806411<dc:creator>动画</dc:creator><comments>https://news.ycombinator.com/item?id=41806411</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41806411 </guid></item><item><title><![CDATA[New comment by gechr in "DeskPad – A virtual monitor for screen sharing"]]></title><description><![CDATA[
<p>在尝试了各种解决方案（包括 DeskPad）之后，我想出了一个自定义的跨平台（我使用的是 macOS，但假设它可以在其他地方工作）解决方案，该解决方案在我的 40 英寸超宽显示器上运行得非常好：OBS[1]。<p>我以前从未使用过 OBS，但知道它在主播中很受欢迎，我想知道我是否可以使用它来 (1) 仅共享我想要共享的特定应用程序，以及 (2) 以人们实际上可以阅读的分辨率共享它们，而无需不断地被要求放大。<p>我首先尝试设置虚拟摄像头并通过视频流进行共享，但速度很慢，而且质量很差，以至于人们无法阅读我共享的内容。我很快就放弃了这种方法。<p>然后我发现了投影仪[2]。通过右键单击 OBS 中的主视图并选择“窗口投影仪（预览）”，它会启动一个单独的窗口，然后我可以通过 Zoom、Teams、Meet 等直接共享该窗口。<p>无论我拖入 OBS 视图中的什么内容，都会显示在窗口投影仪中（类似于 DeskPad），还有一个额外的好处是我可以选择模糊可能拖入的某些应用程序。例如，如果我打开 Slack 或密码管理器，整个窗口都会变得模糊，直到我重新将注意力集中在终端或浏览器上。<p>虽然经过多次调整才达到完美，但我对它现在的表现感到非常满意。<p> ---<p> [1] <a href="https://obsproject.com/" rel="nofollow">https://obsproject.com/</a><p> [2] <a href="https://obsproject.com/kb/power-of-projectors" rel="nofollow">https://obsproject.com/kb/power-of-projectors</a></p> ]]>;</description><pubDate> Thu, 10 Oct 2024 22:47:42 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41804360<dc:creator>格赫尔</dc:creator><comments>https://news.ycombinator.com/item?id=41804360</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41804360 </guid></item><item><title><![CDATA[New comment by BiteCode_dev in "Proposal: JavaScript Structs"]]></title><description><![CDATA[
<p>JavaScript 一点也不简单。<p>它有 3 种声明函数的方法、箭头函数语法的多种变体、奇怪的原型继承系统、可以从函数上的“新”创建的对象、可以充当伪类、类、装饰器、for-i 的对象字面量循环+映射+过滤器+for-in循环（带有hasOwn）+forEach，async/await+promise和一个不可见但始终在线的事件循环，对象代理，反直觉的数组和映射操作，许多不同的方式来创建所说的数组和映射，非常丰富的解构，参数处理上有很多奇怪的地方，多种执行导入的方法在所有上下文中都不起作用，导出，字符串连接+字符串插值，没有整数（但 NaN），“严格模式”，比较运算符的两个版本、危险的“with”关键字、未定义与 null、生成器、稀疏数组、集合...<p>它还具有复杂的规则：<p> - 范围（加上默认的全局变量和提升）<p> - “this”值（和手动绑定）<p> - 类型强制（破坏交换性！）<p> - 半栏自动插入<p>- “typeof”分辨率<p>最重要的是，您可以在各种不同的实现和上下文中执行它：至少有几个浏览器引擎和 Nodejs，有或没有 DOM，在或不在 Web Worker 中，并且可能使用 WASM。<p> ECMA 标准有多个版本，它们会更改您有权访问的功能，除非您使用转译器。但我们甚至不触及生态系统，因为它与语言有关。无论如何，还有太多的话要说。<p>只有两个理由相信 JS 很简单：你对它了解得太多，或者你了解得还不够。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 20:10:31 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41803003<dc:creator>比特代码_dev</dc:creator><comments> https://news.ycombinator.com/item?id=41803003</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41803003 </guid></item><item><title><![CDATA[New comment by leetharris in "Proposal: JavaScript Structs"]]></title><description><![CDATA[
<p>我不知道如何真正完善我的这个想法，但我担心每种语言最终都会变得如此臃肿和复杂，以至于它有一个巨大的进入障碍。<p>对我来说最突出的是 C# 和 Typescript。<p>微软有一个庞大的团队致力于不断改进这些语言，他们不只是专注于让它们更易于使用或提高性能，而是不断添加功能。毕竟，这是他们的工作。他们受到激励，不断使其变得更加复杂。<p>我第一次使用 C# 可能是版本 5？或许？我们现在使用的是版本 12，其中内容太多，有时专家编写的现代 C# 代码对我来说看起来难以理解。<p>这些天我在 Node/Javascript 中工作如此有趣的原因之一是因为它很简单，而且很长一段时间以来 Express/Node/etc 没有太大变化。如果我需要一个可以简单移动的迭代，我只需执行“let items = [];”。就是这么简单，而且这么多年都没有改变。我担心我们最终会想出十几种处理数组的方法，而现代代码的阅读会变得更加困难。<p>当 Typescript 第一次出现时，非常棒。 Javascript 中的类型是我们一直想要的东西。现在，Typescript 已推出 5.6 版本，您可以用它做很多事情，让人不知所措。而且大部分都没有人使用！<p>这可能只是老人的咆哮，但我认为其中有一些东西。我曾经争论过的旧版本是 C 与 C++。现在看看现代 C++，它非常强大，但又如此拥挤，以至于许多人刚刚回到了 C。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 18:48:55 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41802034<dc:creator>利塔里斯</dc:creator><comments>https://news.ycombinator.com/item?id=41802034</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41802034 </guid></item><item><title><![CDATA[New comment by citricsquid in "Helping wikis move away from Fandom"]]></title><description><![CDATA[
<p>作为 Minecraft Wiki 最终落入 Fandom 手中的人，很高兴看到 Weird Gloop（以及类似的）所取得的成就。在出售时，Minecraft Wiki 和 Minecraft 论坛每月的运行成本为数万美元，因此感觉并不太像出售，因为我们<i>需要</i>钱才能生存[1]。 15 年后，互联网已是一个不同的地方，随着 Cloudflare 的推出，运行高流量网站变得更具成本效益。<p>如果我能重来一次，在今天的互联网上，我愿意相信 Weird Gloop 是我们会建立的组织类型，而不是最终进入 Fandom 的机器。我想这就是要说的：感谢 Weird Gloop 实现了我们无法实现的目标（并对所有多年来在阅读 Minecraft 时遭受 Fandom 困扰的人表示歉意）。<p> [1] 这有点逃避，我们确实有选择，出售的决定主要是因为我是一个愚蠢的孩子。事后看来，我们本可以实现独立的可持续发展，这远远超出了我小小的头脑所能想象的。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 14:04:20 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41798956<dc:creator>柠檬鱿鱼</dc:creator><comments>https://news.ycombinator.com/item?id=41798956</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41798956 </guid></item><item><title><![CDATA[New comment by burkaman in "Helping wikis move away from Fandom"]]></title><description><![CDATA[
<p>如果你想知道 Fandom 发生了什么，只要看看现在是谁在运营它就可以了。<p> >; 2018 年 2 月，美国在线前首席执行官乔恩·米勒 (Jon Miller) 在私募股权公司 TPG Capital 的支持下收购了 Fandom。<p> >; 2019年2月，StubHub前CEO Perkins Miller接任CEO<p> - <a href="https://en.wikipedia.org/wiki/Fandom_(website)" rel="nofollow">https://en.wikipedia.org/wiki/Fandom_（网站）</a><p>很难想象还有比私募+StubHub 更糟糕的领导团队。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 13:52:54 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41798838<dc:creator>布卡曼</dc:creator><comments>https://news.ycombinator.com/item?id=41798838</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41798838 </guid></item><item><title><![CDATA[New comment by cbm-vic-20 in "Helping wikis move away from Fandom"]]></title><description><![CDATA[
<p>“Fandom”中的“风扇”是指电脑中的风扇。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 13:32:25 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41798626<dc:creator> cbm-vic-20</dc:creator><comments> https://news.ycombinator.com/item?id=41798626</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41798626 </guid></item><item><title><![CDATA[New comment by NeoTar in "Owe your banker £1k you are at his mercy; owe him £1m the position is reversed (2019)"]]></title><description><![CDATA[
<p>据说，朱利叶斯·凯撒为了当选大祭司而借了太多钱，以至于他实际上迫使债权人支持他的政治野心，希望看到债务得到一些偿还。<p>所以，从本质上来说，事情从来都是如此。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 13:04:13 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41798381<dc:creator>新焦油</dc:creator><comments>https://news.ycombinator.com/item?id=41798381</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41798381 </guid></item><item><title><![CDATA[New comment by ethbr1 in "Automating processes with software is hard"]]></title><description><![CDATA[
<p>作为一个在流程自动化领域度过了大部分职业生涯的人，我认为做好这件事主要取决于状态限制。<p>异常或边缘情况会添加额外的状态。<p>为了应对状态数量的爆炸式增长（以及<i>它们</i>生成的中间状态），您有几个强大的工具：<p><pre><code> 1. Identifying and routing out divergent items (aka ensuring items get more similar as they progress through automation) 2. Reunifying divergent paths, instead of building branches</code></pre>精心设计的自动化应该看起来像一个漏斗，而不是地铁地图。<p>如果您想返回并自动化正在路由的一类工作，请明确针对它编写一个<i>新的</i>自动化流程。不要试图拼凑成一个可以处理所有事情的巨型意大利面巨石。<p> PS：这还有一个副作用，就是简化和总结关于“在这种情况下我们应该做什么？”的讨论。与其他利益相关者。对于更复杂的多类型案例来说，这可能是永无止境的。<p> PPS：看在上帝的份上，永远不要以 100% 的传入工作负载自动化为目标。曾经。迭代地接近它，但接受实现它可能是不可能的。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 12:44:42 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41798250<dc:creator> ethbr1</dc:creator><comments> https://news.ycombinator.com/item?id=41798250</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41798250 </guid></item><item><title><![CDATA[New comment by seanhunter in "How to make Product give a shit about your architecture proposal"]]></title><description><![CDATA[
<p>最有价值的人生教训之一是，你基本上无法让其他人关心你希望他们关心的事情。你需要专注于你可以控制的事情，而你无法控制的事情之一就是别人会关心的事情。<p>因此，如果你想要完成某件事而其他人必须同意，你必须弄清楚你想要的事情如何与他们的兴趣和关注点相一致。<p>然后，您向他们解释您想要的东西，即它如何促进/影响他人的利益和关注。因此，在 TFA 的框架中，产品在任何情况下都不会关心你的架构提案（因为这完全在你关心的范围内）。但他们可能关心架构将如何阻止他们提供即将推出的路线图上的功能，以及您如何拥有可以解决该问题的解决方案（因为现在您处于他们关注的范围内）。请注意，这不仅仅是“您的架构提案”，它是<i>您的架构提案如何让他们得到他们想要的东西</i>，如果你想这样做，你需要深入思考并确保你真正理解他们想要什么，而不仅仅是你想要什么。<p>你并不是想改变他们的想法。你试图通过向他们展示如何获得他们想要的东西来获得你想要的东西。<p>我把这句话放在这里是因为我真的希望有人在 25 年前我职业生涯刚刚开始时就告诉我这一点。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 04:50:58 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41795621<dc:creator>肖恩亨特</dc:creator><comments>https://news.ycombinator.com/item?id=41795621</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41795621 </guid></item><item><title><![CDATA[New comment by Springtime in "Internet Archive: Security breach alert"]]></title><description><![CDATA[
<p>仅就隐私而言，值得注意的是，任何在 IA 上上传内​​容的人都已经可以公开查看其电子邮件地址。<p>这不是众所周知的事情（甚至根据此处的评论来判断），但在每次上传的公开可见元数据中，它包含上传者的 IA 帐户电子邮件地址。因此，从安全角度来看，这很糟糕，但从隐私角度来看，如果用户上传了任何内容，他们可能并不知道这个细节。</p> ]]>;</description><pubDate> Thu, 10 Oct 2024 03:48:47 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41795324<dc:creator>春天</dc:creator><comments>https://news.ycombinator.com/item?id=41795324</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41795324 </guid></item><item><title><![CDATA[New comment by stego-tech in "US weighs Google break-up in landmark antitrust case"]]></title><description><![CDATA[
<p>喜欢这里评论中的讨论。作为一个在某种意义上与谷歌一起成长的人，我站在“打破它”阵营的一边。在当时，有一家公司如此出色地为我们提供我们可能需要的一切数字化服务——G Suite、YouTube、搜索、地图、广告、书籍、阅读器等——这很新鲜，但事后看来，我们赋予了太多的权力这是一个不负责任的实体，反过来又利用它来封锁任何挑战其统治地位的途径。<p>至于“但是GDP”的反驳，有一个反驳观点认为，通过刺激新业务和新概念，通过更高的多样性和严格的并购法规，GDP 会同样增长，而不是在流行后成为主流。这种时尚似乎只对老牌玩家有利。还有一种观点认为，将 GDP 值与理想目标等同起来会产生古德哈特定律问题，从而使 GDP 作为衡量增长或成功的指标成为一个糟糕的指标；过去几十年来，当人们越来越关注 GDP 作为增长或成功的目标时，收入和财富不平等的加剧可以被视为支持上述论点的证据。<p>值得注意的是，这起针对谷歌的案件很可能成为未来撤资和分拆的风向标。无论接下来发生什么，对双方来说都是宝贵的学习经验，就像 AT&amp;T 和微软自己的反垄断困境对当前这批公司来说是一次宝贵的学习经验一样。</p> ]]>;</description><pubDate> Wed, 09 Oct 2024 18:19:46 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41791020<dc:creator>隐写技术</dc:creator><comments>https://news.ycombinator.com/item?id=41791020</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41791020 </guid></item><item><title><![CDATA[New comment by relistan in "US weighs Google break-up in landmark antitrust case"]]></title><description><![CDATA[
<p>看到所有人都在哀叹 AT&amp;T 的解散，真是太搞笑了。这次分手引发了长途电话竞赛，并成为大规模铺设光纤的驱动力……从而促成了 20 世纪 90 年代的互联网繁荣。</p> ]]>;</description><pubDate> Wed, 09 Oct 2024 17:47:29 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41790667<dc:creator>雷利斯坦</dc:creator><comments>https://news.ycombinator.com/item?id=41790667</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41790667 </guid></item><item><title><![CDATA[New comment by kristjansson in "PEP 760: No more bare excepts"]]></title><description><![CDATA[
<p>我关心的，以及我认为维护者最关心的，不是正在编写的代码，也不是将要编写的代码，而是所有已经编写的代码，并且永远不会再被触及。像这样的中断将迫使许多 python 用户避免升级到 3.17，放弃他们可能想继续使用的软件包，或者自行处理修补未维护的依赖项的麻烦。<p>对于那些以编写 Python 为工作核心的 Python 用户来说，这可能没问题。对于所有其他用户来说，Python 是他们工作中陌生的、偶然的、但却不可或缺的一部分（科学家、分析师……），这种选择是站不住脚的。虽然Python可以而且应该努力成为一种更“严肃”、“专业”的语言，但它_必须_对后一个阵营有尊重和同情。将应该是 linter 规则的东西提升为语言更改并不是这样。</p> ]]>;</description><pubDate> Wed, 09 Oct 2024 16:41:50 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41789903<dc:creator>克里斯詹森</dc:creator><comments>https://news.ycombinator.com/item?id=41789903</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41789903 </guid></item><item><title><![CDATA[New comment by cuuupid in "PEP 760: No more bare excepts"]]></title><description><![CDATA[
<p>如果我正确理解这一点，这个提议将完全破坏与许多（大多数？）代码库的兼容性，实际上删除语法糖并强制使用更多字符来实现相同的功能。我不明白这是如何考虑的。<p>我也不明白这里惯用的观点，我知道作者个人觉得当异常不详细时会令人困惑，但我认为你很难找到许多同意的Python开发人员。即使在生态系统之外，大多数语言也增加了对裸异常的更多支持（例如带有裸捕获的 js），因此这感觉像是倒退了一步。<p>但也许我只是不理解这个建议！</p> ]]>;</description><pubDate> Wed, 09 Oct 2024 14:33:54 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41788338<dc:creator>库乌皮德</dc:creator><comments>https://news.ycombinator.com/item?id=41788338</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41788338 </guid></item><item><title><![CDATA[New comment by eig in "Chemistry Nobel: Computational protein design and protein structure prediction"]]></title><description><![CDATA[
<p>我想我不同意这里的大多数评论，认为将诺贝尔奖授予 AlphaFold 还为时过早。<p>我在生物技术学术界，它已经改变了一切。是的，蛋白质折叠问题还没有“解决”，但生物学中从来没有问题被“解决”。与之前的生物/化学诺贝尔奖获得者如 Crispr、触摸受体、量子点、点击化学相比，我确实认为 AlphaFold 已经达到了足够的影响力。</p> ]]>;</description><pubDate> Wed, 09 Oct 2024 12:40:01 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41787261<dc:creator>埃格</dc:creator><comments>https://news.ycombinator.com/item?id=41787261</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41787261 </guid></item><item><title><![CDATA[New comment by ThePhysicist in "Chemistry Nobel: Computational protein design and protein structure prediction"]]></title><description><![CDATA[
<p>Demis Hasabis 拥有一份非常有趣且不寻常的诺贝尔奖获得者简历 [1]，他的职业生涯始于人工智能游戏编程（他曾在 Popoulous II、Syndicate、Bullfrog 的主题公园工作，后来又在 Lionhead Studios 的 Black &amp; White 工作）在获得神经科学博士学位、成为一名企业家并创办 DeepMind 之前。我想说，这是一个令人耳目一新且非常罕见的诺贝尔奖选择，看到你不再需要成为大学教授才能进行这种有影响力的研究，真的很酷。<p> 1： <a href="https://en.wikipedia.org/wiki/Demis_Hassabis" rel="nofollow">https://en.wikipedia.org/wiki/Demis_Hassabis</a></p> ]]>;</description><pubDate> Wed, 09 Oct 2024 11:26:23 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41786662<dc:creator>物理学家</dc:creator><comments>https://news.ycombinator.com/item?id=41786662</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41786662 </guid></item><item><title><![CDATA[New comment by mihaic in "John Carmack on inlined code (2014)"]]></title><description><![CDATA[
<p>当我第一次听到“聪明人应该能够同时持有两种相反的想法”这句格言时，我天真地认为这意味着权衡它们的利弊。随着时间的推移，我意识到这意味着平衡矛盾的行动，而经验的主要目的是知道何时应用每一个行动。<p>与该主题具体相关的是，我经常发现自己内联了一小段一次性代码，使函数更加明确，而在其他时候，我会花几天时间将千行函数分解成更简单的块，以便能够遵循这是怎么回事。在这两种情况下，我都造成了年轻开发人员挑剔的不一致之处——我知道我确实做到了。<p>现在，在大多数情况下，我的目标是针对人类思维的极限（我自己的低努力模式）优化代码，并且希望能够将规则视为指导方针。问题是如何将其扩展到数百万开发人员，以及当越来越多的人工智能生成的代码被使用时，人类思维的限制是什么？</p> ]]>;</description><pubDate> Wed, 09 Oct 2024 06:34:02 +0000</pubDate><link/> https://news.ycombinator.com/item?id=41785113<dc:creator>米哈伊克</dc:creator><comments>https://news.ycombinator.com/item?id=41785113</comments><guid ispermalink="false"> https://news.ycombinator.com/item?id=41785113</guid></item></channel></rss>